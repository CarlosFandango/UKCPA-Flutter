#!/bin/bash

# Integration Test Performance Benchmark
# Compares fast vs normal test execution times

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}🏁 Integration Test Performance Benchmark${NC}"
echo "=================================================="

# Test files to benchmark
TESTS=(
  "fast_auth_test"
  "fast_course_discovery_test"
)

DEVICE="emulator-5554"
RESULTS_FILE="test/integration/results/benchmark_results.md"

# Create results directory
mkdir -p "test/integration/results"

# Initialize results file
cat > "$RESULTS_FILE" << EOF
# Integration Test Performance Benchmark

**Date:** $(date)
**Device:** $DEVICE

## Results

| Test | Fast Mode (s) | Normal Mode (s) | Improvement |
|------|---------------|-----------------|-------------|
EOF

echo -e "${YELLOW}🔧 Optimizing emulator for benchmarking...${NC}"
adb shell settings put global window_animation_scale 0.0
adb shell settings put global transition_animation_scale 0.0
adb shell settings put global animator_duration_scale 0.0

total_fast_time=0
total_normal_time=0

for test in "${TESTS[@]}"; do
  echo ""
  echo -e "${YELLOW}📊 Benchmarking: $test${NC}"
  
  # Fast mode
  echo -e "${GREEN}Running FAST mode...${NC}"
  fast_start=$(date +%s)
  ./test/integration/scripts/run_fast_tests.sh "$test" --skip-build > /dev/null 2>&1
  fast_end=$(date +%s)
  fast_duration=$((fast_end - fast_start))
  
  # Normal mode (if exists)
  normal_test_file="${test/_fast/}"
  if [ -f "integration_test/flows/${normal_test_file}.dart" ]; then
    echo -e "${YELLOW}Running NORMAL mode...${NC}"
    normal_start=$(date +%s)
    ./test/integration/scripts/run_integration_tests.sh -f "$normal_test_file" > /dev/null 2>&1
    normal_end=$(date +%s)
    normal_duration=$((normal_end - normal_start))
    
    # Calculate improvement
    if [ $normal_duration -gt 0 ]; then
      improvement=$(echo "scale=1; ($normal_duration - $fast_duration) / $normal_duration * 100" | bc)
      improvement_text="${improvement}% faster"
    else
      improvement_text="N/A"
    fi
  else
    normal_duration="N/A"
    improvement_text="New test"
  fi
  
  # Add to results
  echo "| $test | ${fast_duration}s | ${normal_duration}s | $improvement_text |" >> "$RESULTS_FILE"
  
  # Update totals
  total_fast_time=$((total_fast_time + fast_duration))
  if [ "$normal_duration" != "N/A" ]; then
    total_normal_time=$((total_normal_time + normal_duration))
  fi
  
  echo -e "${GREEN}✅ $test completed in ${fast_duration}s${NC}"
done

# Add summary
cat >> "$RESULTS_FILE" << EOF

## Summary

- **Total Fast Mode Time:** ${total_fast_time}s
- **Total Normal Mode Time:** ${total_normal_time}s
- **Overall Improvement:** $(echo "scale=1; ($total_normal_time - $total_fast_time) / $total_normal_time * 100" | bc)%

## Performance Optimizations Applied

1. **Shared App Initialization** - Initialize once, reuse across tests
2. **Reduced Timeouts** - 2-3s instead of 8-10s for pumpAndSettle
3. **Animation Disabling** - Android system animations set to 0
4. **Build Skipping** - Reuse existing APK when possible
5. **Smart State Management** - Only reset necessary state between tests
6. **Batch Test Execution** - Group related tests together

## Recommendations

- Use fast mode for development and quick validation
- Use normal mode for comprehensive testing before releases
- Target: <15 seconds per test (fast mode), <30 seconds per test (normal mode)

---
*Generated by benchmark_tests.sh*
EOF

echo ""
echo -e "${BLUE}📈 Benchmark Results:${NC}"
echo -e "${GREEN}Total Fast Mode Time: ${total_fast_time}s${NC}"
if [ $total_normal_time -gt 0 ]; then
  echo -e "${YELLOW}Total Normal Mode Time: ${total_normal_time}s${NC}"
  overall_improvement=$(echo "scale=1; ($total_normal_time - $total_fast_time) / $total_normal_time * 100" | bc)
  echo -e "${GREEN}Overall Improvement: ${overall_improvement}% faster${NC}"
fi

echo ""
echo -e "${BLUE}📄 Full results saved to: $RESULTS_FILE${NC}"

# Display target achievements
echo ""
echo -e "${YELLOW}🎯 Performance Targets:${NC}"
echo "  - Fast Mode: <15 seconds per test"
echo "  - Normal Mode: <30 seconds per test" 
echo "  - Overall Suite: <5 minutes for full coverage"

if [ $total_fast_time -lt 60 ]; then
  echo -e "${GREEN}🏆 EXCELLENT: Fast test suite under 1 minute!${NC}"
elif [ $total_fast_time -lt 120 ]; then
  echo -e "${GREEN}✅ GOOD: Fast test suite under 2 minutes${NC}"
else
  echo -e "${YELLOW}⚠️  Room for improvement: Consider more optimizations${NC}"
fi