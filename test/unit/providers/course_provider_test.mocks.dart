// Mocks generated by Mockito 5.4.4 from annotations
// in ukcpa_flutter/test/unit/providers/course_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ukcpa_flutter/domain/entities/course.dart' as _i4;
import 'package:ukcpa_flutter/domain/entities/course_group.dart' as _i5;
import 'package:ukcpa_flutter/domain/entities/course_session.dart' as _i6;
import 'package:ukcpa_flutter/domain/repositories/course_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCourseSearchResult_0 extends _i1.SmartFake
    implements _i2.CourseSearchResult {
  _FakeCourseSearchResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCourseFilterOptions_1 extends _i1.SmartFake
    implements _i2.CourseFilterOptions {
  _FakeCourseFilterOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CourseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseRepository extends _i1.Mock implements _i2.CourseRepository {
  MockCourseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.CourseSearchResult> getCourses(
          {_i2.CourseSearchFilters? filters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourses,
          [],
          {#filters: filters},
        ),
        returnValue:
            _i3.Future<_i2.CourseSearchResult>.value(_FakeCourseSearchResult_0(
          this,
          Invocation.method(
            #getCourses,
            [],
            {#filters: filters},
          ),
        )),
      ) as _i3.Future<_i2.CourseSearchResult>);

  @override
  _i3.Future<_i4.Course?> getCourse(String? courseId) => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [courseId],
        ),
        returnValue: _i3.Future<_i4.Course?>.value(),
      ) as _i3.Future<_i4.Course?>);

  @override
  _i3.Future<_i4.StudioCourse?> getStudioCourse(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStudioCourse,
          [courseId],
        ),
        returnValue: _i3.Future<_i4.StudioCourse?>.value(),
      ) as _i3.Future<_i4.StudioCourse?>);

  @override
  _i3.Future<_i4.OnlineCourse?> getOnlineCourse(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineCourse,
          [courseId],
        ),
        returnValue: _i3.Future<_i4.OnlineCourse?>.value(),
      ) as _i3.Future<_i4.OnlineCourse?>);

  @override
  _i3.Future<List<_i5.CourseGroup>> getCourseGroups() => (super.noSuchMethod(
        Invocation.method(
          #getCourseGroups,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.CourseGroup>>.value(<_i5.CourseGroup>[]),
      ) as _i3.Future<List<_i5.CourseGroup>>);

  @override
  _i3.Future<_i5.CourseGroup?> getCourseGroup(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourseGroup,
          [groupId],
        ),
        returnValue: _i3.Future<_i5.CourseGroup?>.value(),
      ) as _i3.Future<_i5.CourseGroup?>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesInGroup(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesInGroup,
          [groupId],
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i6.CourseSession>> getCourseSessions(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourseSessions,
          [courseId],
        ),
        returnValue:
            _i3.Future<List<_i6.CourseSession>>.value(<_i6.CourseSession>[]),
      ) as _i3.Future<List<_i6.CourseSession>>);

  @override
  _i3.Future<_i6.CourseSession?> getCourseSession(String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCourseSession,
          [sessionId],
        ),
        returnValue: _i3.Future<_i6.CourseSession?>.value(),
      ) as _i3.Future<_i6.CourseSession?>);

  @override
  _i3.Future<List<_i6.CourseSession>> getUpcomingSessions(String? courseId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingSessions,
          [courseId],
        ),
        returnValue:
            _i3.Future<List<_i6.CourseSession>>.value(<_i6.CourseSession>[]),
      ) as _i3.Future<List<_i6.CourseSession>>);

  @override
  _i3.Future<_i2.CourseSearchResult> searchCourses(
    String? query, {
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchCourses,
          [query],
          {#filters: filters},
        ),
        returnValue:
            _i3.Future<_i2.CourseSearchResult>.value(_FakeCourseSearchResult_0(
          this,
          Invocation.method(
            #searchCourses,
            [query],
            {#filters: filters},
          ),
        )),
      ) as _i3.Future<_i2.CourseSearchResult>);

  @override
  _i3.Future<List<_i4.Course>> getFeaturedCourses({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeaturedCourses,
          [],
          {#limit: limit},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getPopularCourses({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularCourses,
          [],
          {#limit: limit},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesByDanceType(
    _i4.DanceType? danceType, {
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesByDanceType,
          [danceType],
          {#filters: filters},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesByLevel(
    _i4.Level? level, {
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesByLevel,
          [level],
          {#filters: filters},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesByLocation(
    _i4.Location? location, {
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesByLocation,
          [location],
          {#filters: filters},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesForAge(
    int? age, {
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesForAge,
          [age],
          {#filters: filters},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesWithTasters(
          {_i2.CourseSearchFilters? filters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesWithTasters,
          [],
          {#filters: filters},
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getRecommendedCourses({
    List<_i4.DanceType>? preferredDanceTypes,
    List<_i4.Level>? preferredLevels,
    int? age,
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecommendedCourses,
          [],
          {
            #preferredDanceTypes: preferredDanceTypes,
            #preferredLevels: preferredLevels,
            #age: age,
            #filters: filters,
          },
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<List<_i4.Course>> getCoursesStartingSoon({
    int? days = 7,
    _i2.CourseSearchFilters? filters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoursesStartingSoon,
          [],
          {
            #days: days,
            #filters: filters,
          },
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<_i2.CourseFilterOptions> getFilterOptions() => (super.noSuchMethod(
        Invocation.method(
          #getFilterOptions,
          [],
        ),
        returnValue: _i3.Future<_i2.CourseFilterOptions>.value(
            _FakeCourseFilterOptions_1(
          this,
          Invocation.method(
            #getFilterOptions,
            [],
          ),
        )),
      ) as _i3.Future<_i2.CourseFilterOptions>);

  @override
  _i3.Future<void> refreshCourses() => (super.noSuchMethod(
        Invocation.method(
          #refreshCourses,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Course>> getCachedCourses() => (super.noSuchMethod(
        Invocation.method(
          #getCachedCourses,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Course>>.value(<_i4.Course>[]),
      ) as _i3.Future<List<_i4.Course>>);

  @override
  _i3.Future<bool> isDataStale() => (super.noSuchMethod(
        Invocation.method(
          #isDataStale,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
